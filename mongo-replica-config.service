[Unit]
Description=Mongos router

[Service]
KillMode=none
TimeoutStartSec=360
TimeoutStopSec=360
EnvironmentFile=/etc/environment
ExecStartPre=/bin/bash -c "/usr/bin/docker pull mongo:latest"
ExecStart=/bin/bash -c "\
    set -e; \
    OTHER_NODES=$(etcdctl ls /mongo/rs1/nodes | \
                    xargs -I{} basename {} | \
                    xargs -I{} echo {}:27017 | \
                    grep -v $COREOS_PRIVATE_IPV4); \
    \
    echo Will configure replica set from now; \
    echo trying to init the replicaset...; \
    \
    /usr/bin/docker run -t --rm mongo:latest \
        mongo $COREOS_PRIVATE_IPV4 \
        --eval \"rs.initiate();\"; \
    \
    /usr/bin/sleep 60; \
    echo fix address of first node...; \
    /usr/bin/docker run -t --rm mongo:latest \
        mongo $COREOS_PRIVATE_IPV4 \
        --eval \"var config = rs.config(); \
            if (config.members.length === 1) { \
              config.members[0].host = '$COREOS_PRIVATE_IPV4'; \
              rs.reconfig(config); \
            }\"; \
    \
    echo adding nodes...; \
    \
    ADD_CMDS=$(etcdctl ls /mongo/rs1/nodes | \
                 grep -v $COREOS_PRIVATE_IPV4 | \
                 xargs -I{} basename {} | \
                 xargs -I{} echo \"rs.add('{}:27017');\"); \
    \
    /usr/bin/docker run -t --rm mongo:latest \
        mongo $COREOS_PRIVATE_IPV4 \
        --eval \"$ADD_CMDS\" ; \
    \
    echo Replica is configured ;\
    exit 0;"

Restart=on-failure
[X-Fleet]
MachineOf=rs1@1.service
